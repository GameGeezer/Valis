#version 450

layout(vertices = 3) out;

in vec3 pass_Position[];
in vec3 pass_Normal[];
in uint pass_Spare[];

out vec3 pass_TessPosition[];
out vec3 pass_TessNormal[];
out uint pass_TessSpare[];

void main()
{
	

    pass_TessPosition[gl_InvocationID] = pass_Position[gl_InvocationID];
	pass_TessNormal[gl_InvocationID] = pass_Normal[gl_InvocationID];
	pass_TessSpare[gl_InvocationID] = pass_Spare[gl_InvocationID];

    if (gl_InvocationID == 0) {
        gl_TessLevelInner[0] = 8.0;
        gl_TessLevelOuter[0] = 16.0;
        gl_TessLevelOuter[1] = 16.0;
        gl_TessLevelOuter[2] = 16.0;
    }
}